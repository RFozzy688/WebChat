<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WebChatClient">


    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors.xaml" />
        <ResourceDictionary Source="Fonts.xaml" />
        <ResourceDictionary Source="Texts.xaml" />
        <ResourceDictionary Source="icons.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="BaseWndCtrlButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource LightBlueBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <Path HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                      Data="{TemplateBinding Content}"
                      Fill="{TemplateBinding Foreground}"/>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Стиль кнопок (свернуть/развернуть) управления окном -->
    <Style x:Key="WindowControlButtonStyle"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource BaseWndCtrlButtonStyle}">
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource LightBlueOpacityBrush}" />
                <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--кнопка закрытия окна-->
    <ControlTemplate x:Key="ButtonCloseWindow"
                     TargetType="{x:Type ButtonBase}">
        <Border x:Name="border">
            <Button x:Name="btn"
                    Style="{StaticResource BaseWndCtrlButtonStyle}"
                    Content="{StaticResource close}"
                    Command="{Binding CloseCommand}"/>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter TargetName="border" Property="Border.CornerRadius" Value="0,10,0,0" />
                <Setter TargetName="border" Property="Border.Background" Value="{StaticResource LightBlueOpacityBrush}" />
                <Setter TargetName="btn" Property="Button.Foreground" Value="{StaticResource WhiteBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Стиль по умолчанию для Path-->
    <Style TargetType="{x:Type Path}">
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="Stretch" Value="Uniform"/>
    </Style>

    <!--переопределенный шаблон оранжевой кнопки-->
    <Style x:Key="OrangeButton" TargetType="{x:Type Button}" 
           BasedOn="{StaticResource BaseStyle}">

        <Setter Property="Background" Value="{StaticResource OrangeBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource VeryLightBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="{StaticResource RoundedRegular}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeXXLarge}"/>
        <Setter Property="Padding" Value="50 10"/>
        <Setter Property="Margin" Value="0 10"/>

        <Setter Property="local:IsBusyProperty.Value" Value="False" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" 
                            CornerRadius="10"
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            SnapsToDevicePixels="true">
                        <Grid>
                            <TextBlock 
                                Text="{TemplateBinding Content}"
                                Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisiblityConverter}}"
                                Focusable="False"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Margin="{TemplateBinding Padding}"/>

                            <TextBlock 
                                Visibility="{TemplateBinding local:IsBusyProperty.Value, 
                                Converter={local:BooleanToVisiblityConverter}, 
                                ConverterParameter=True}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Style="{StaticResource SpinningText}"
                                FontSize="{TemplateBinding FontSize}"/>
                        </Grid>
                        
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource LightBlue}"
                                                    Duration="0:0:0.3"
                                                    Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="Background.Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource Orange}"
                                                    Duration="0:0:0.3"
                                                    Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="Background.Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" 
                                    Value="{StaticResource MiddleDarkBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Background" TargetName="border" 
                                    Value="{StaticResource LightBlueBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--переопределенный шаблон текстовой кнопки-->
    <Style x:Key="TextButton"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource OrangeButton}">

        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource VeryLightBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource RoundedRegular}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeLarge}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <TextBlock x:Name="TextBtn" 
                               Text="{TemplateBinding Content}"
                               Focusable="False"
                               FontFamily="{TemplateBinding FontFamily}"
                               FontSize="{TemplateBinding FontSize}"
                               HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                               Margin="{TemplateBinding Padding}"/>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource Orange}"
                                                    Duration="0:0:0.3"
                                                    Storyboard.TargetName="TextBtn"
                                                    Storyboard.TargetProperty="Foreground.Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource VeryLight}"
                                                    Duration="0:0:0.3"
                                                    Storyboard.TargetName="TextBtn"
                                                    Storyboard.TargetProperty="Foreground.Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Foreground" 
                                    TargetName="TextBtn" 
                                    Value="{StaticResource OrangeBrush}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource MiddleDarkBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Icon button -->
    <Style x:Key="IconButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">

        <Setter Property="Background" Value="{StaticResource LightBlueBrush}" />
        <Setter Property="Foreground" Value="{StaticResource VeryLightBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="60" />
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
        <Setter Property="Padding" Value="30" />
        <Setter Property="Margin" Value="2 2 0 2" />

        <Setter Property="Width" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}" 
                        SnapsToDevicePixels="True">
                        <Grid>
                            <Viewbox>
                                <TextBlock Text="{TemplateBinding Content}" 
                                   Focusable="False" 
                                   FontFamily="{TemplateBinding FontFamily}"
                                   FontSize="{TemplateBinding FontSize}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                   Margin="{TemplateBinding Padding}" 
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Viewbox>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource LightBlueOpacity}" 
                                                    Duration="0:0:0.3" 
                                                    Storyboard.TargetName="border" 
                                                    Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource LightBlue}" 
                                                    Duration="0:0:0.3" 
                                                    Storyboard.TargetName="border" 
                                                    Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" 
                                    Value="{StaticResource MiddleDarkBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Icon button -->
    <Style x:Key="IconGrowButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">

        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource MiddleDarkBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeXXLarge}" />
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
        <Setter Property="Padding" Value="30" />
        <Setter Property="Margin" Value="0" />

        <Setter Property="Width" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                         BorderBrush="{TemplateBinding BorderBrush}"
                         BorderThickness="{TemplateBinding BorderThickness}"
                         Background="{TemplateBinding Background}" 
                         SnapsToDevicePixels="True">

                        <!-- Add a render scale transform -->
                        <Border.RenderTransform>
                            <ScaleTransform />
                        </Border.RenderTransform>
                        <Border.RenderTransformOrigin>
                            <Point X="0.5" Y="0.5" />
                        </Border.RenderTransformOrigin>

                        <Grid>
                            <Viewbox>
                                <TextBlock Text="{TemplateBinding Content}" 
                                    Focusable="False" 
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="{TemplateBinding FontSize}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    Margin="{TemplateBinding Padding}" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Viewbox>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="1.4" 
                                                     Duration="0:0:0.15" 
                                                     Storyboard.TargetName="border" 
                                                     Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" />
                                    <DoubleAnimation To="1.4" 
                                                     Duration="0:0:0.15" 
                                                     Storyboard.TargetName="border" 
                                                     Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="1" 
                                                     Duration="0:0:0.15" 
                                                     Storyboard.TargetName="border" 
                                                     Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" />
                                    <DoubleAnimation To="1" 
                                                     Duration="0:0:0.15" 
                                                     Storyboard.TargetName="border" 
                                                     Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource VeryDarkBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--шаблон кнопки Отправить-->
    <Style x:Key="SendButton" TargetType="{x:Type Button}" 
        BasedOn="{StaticResource BaseStyle}">

        <Setter Property="Background" Value="Green"/>
        <Setter Property="Foreground" Value="{StaticResource VeryLightBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="{StaticResource RoundedRegular}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeXXLarge}"/>
        <Setter Property="Padding" Value="50 10"/>
        <Setter Property="Margin" Value="0 10"/>

        <Setter Property="local:IsBusyProperty.Value" Value="False" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" 
                         CornerRadius="10"
                         Background="{TemplateBinding Background}" 
                         BorderBrush="{TemplateBinding BorderBrush}" 
                         BorderThickness="{TemplateBinding BorderThickness}" 
                         SnapsToDevicePixels="true">
                        <Grid>
                            <TextBlock 
                                 Text="{TemplateBinding Content}"
                                 Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisiblityConverter}}"
                                 Focusable="False"
                                 FontFamily="{TemplateBinding FontFamily}"
                                 FontSize="{TemplateBinding FontSize}"
                                 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                 SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                 Margin="{TemplateBinding Padding}"/>

                            <TextBlock 
                                 Visibility="{TemplateBinding local:IsBusyProperty.Value, 
                                 Converter={local:BooleanToVisiblityConverter}, 
                                 ConverterParameter=True}"
                                 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                 Style="{StaticResource SpinningText}"
                                 FontSize="{TemplateBinding FontSize}"/>
                        </Grid>

                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource LightBlue}"
                                                 Duration="0:0:0.3"
                                                 Storyboard.TargetName="border"
                                                 Storyboard.TargetProperty="Background.Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="Green"
                                                 Duration="0:0:0.3"
                                                 Storyboard.TargetName="border"
                                                 Storyboard.TargetProperty="Background.Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" 
                                 Value="{StaticResource MiddleDarkBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Background" TargetName="border" 
                                 Value="{StaticResource LightBlueBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Settings buttons -->
    <Style x:Key="SettingsButtons" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">

        <Setter Property="Foreground" Value="{StaticResource VeryLightBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
        <Setter Property="Padding" Value="30" />
        <Setter Property="Margin" Value="5" />

        <Setter Property="Width" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            CornerRadius="10"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Viewbox>
                                <TextBlock Text="{TemplateBinding Content}" 
                                           Focusable="False" 
                                           FontFamily="{TemplateBinding FontFamily}"
                                           FontSize="{TemplateBinding FontSize}"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                           Margin="{TemplateBinding Padding}" 
                                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Viewbox>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource LightBlue}" 
                                                Duration="0:0:0.1" 
                                                Storyboard.TargetName="border" 
                                                Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Duration="0:0:0.1" 
                                                    Storyboard.TargetName="border" 
                                                    Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" 
                                Value="{StaticResource MiddleDarkBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>