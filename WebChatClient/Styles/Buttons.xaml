<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WebChatClient">


    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors.xaml" />
        <ResourceDictionary Source="Fonts.xaml" />
        <ResourceDictionary Source="Texts.xaml" />
        <ResourceDictionary Source="icons.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="BaseWndCtrlButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource LightBlueBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <Path HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                      Data="{TemplateBinding Content}"
                      Fill="{TemplateBinding Foreground}"/>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Стиль кнопок (свернуть/развернуть) управления окном -->
    <Style x:Key="WindowControlButtonStyle"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource BaseWndCtrlButtonStyle}">
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource LightBlueOpacityBrush}" />
                <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--кнопка закрытия окна-->
    <ControlTemplate x:Key="ButtonCloseWindow"
                     TargetType="{x:Type ButtonBase}">
        <Border x:Name="border">
            <Button x:Name="btn"
                    Style="{StaticResource BaseWndCtrlButtonStyle}"
                    Content="{StaticResource close}"
                    Command="{Binding CloseCommand}"/>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter TargetName="border" Property="Border.CornerRadius" Value="0,10,0,0" />
                <Setter TargetName="border" Property="Border.Background" Value="{StaticResource LightBlueOpacityBrush}" />
                <Setter TargetName="btn" Property="Button.Foreground" Value="{StaticResource WhiteBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Стиль по умолчанию для Path-->
    <Style TargetType="{x:Type Path}">
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="Stretch" Value="Uniform"/>

        <!--todo: add animations later...-->
    </Style>

    <!--переопределенный шаблон кнопки-->
    <Style x:Key="TextButton" TargetType="{x:Type Button}" 
           BasedOn="{StaticResource BaseStyle}">

        <Setter Property="Background" Value="{StaticResource OrangeBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource VeryLightBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="{StaticResource RoundedRegular}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeXXLarge}"/>
        <Setter Property="Padding" Value="50 10"/>
        <Setter Property="Margin" Value="0 10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" 
                            CornerRadius="10"
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            SnapsToDevicePixels="true">
                        <TextBlock Text="{TemplateBinding Content}"
                                   Focusable="False"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   FontSize="{TemplateBinding FontSize}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                   Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource LightBlueBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource MiddleDarkBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

</ResourceDictionary>